


Despues de la charla "on presentia" con Jose.


- en el lexer / parser ... se le tiene que poder decir al "lector" de gramatica, que 
  avise si encontro la "palabra" buscada en un nivel del arbol, definido por el usuario.


- el parser tiene que tener recuperacion de errores

- el parser tiene que resolver conflictos de reduce reduce o shift reduce con
  alguna estrategia por defecto.





En esta version !!


- introducimos el concepto de una "Parsing Flow Guide Routine"  (PFGR) ...
  que hace la PFGR ...

  Utiliza una denominacion que crea el que define la gramatica, que tiene que
  ver con los niveles del arbol gramatical.

  Ejemplo:

  
  FRA     es una frase
  SEN     es una sentencia
  NSE     es una sentencia negada
  TER     es una hoja del arbol 

  Entonces se define el nivel ...

  
  FRA     1
  SEN     2
  NSE     2
  TER     3


  La PFGR (no me gusto mucho el nombre, busquemos algo mas funcional ) sirve para :

  En cada "shift" o "reduce" del parser ... la ejecuta ... pasando como parametros
  1 ... Codigo de sector del arbol ... FRA  .. SEN .. NSE .. TER ... etc
  2 ... yy ..  las variables del lex ... con el token 

  Manejamos un par de variables globales

  flag_global_si_hago_algo     si todavia tengo que seguir analizando en la PFGR
  flag_nivel_de_busqueda       a que nivel de la expresion tengo que buscar
  flag_palabra_encontrada      si encontre o no la palabra de referencia


  
 
