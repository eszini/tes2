#
#	parser_nga2.txt
#
#	dom., 30 de sep. de 2018 06:16:57 a. m.
#
#	Reglas tipo 'negex ampliado' 
#
#
#
# Cada linea es una "regla"
#
# El "ejecutor" de reglas ... ejecuta por cada linea del corpus de input,
# todas las reglas en orden, hasta que una matchea, y pasa a la siguiente linea.
# (es decir, no importa que haya varias que matcheen, el ciclo termina
# con la primera que haga el matching ).
#
# Cada regla son "acciones" separadas por ','
# Cada "accion" se ejecuta en orden.
# Si el "parser" logra aplicar todas las acciones a una linea, la funcion
# ( nnparse ) devuelve el numero de regla que matcheo.
#
# ej:
# no/E  debe figurar 'no' exactamente
# obser/P  es cualquier palabra que matchee al principio con 'obser'
#          ( observando, observaron, observo etc )
# a | b    matchea con cualquiera de la lista (OR)
# <5*>     distancia 5 ... 
#          indica que entra una accion y otra, puede haber hasta 5 elementos
# REF      es la palabra que se busca ( ej: 'liquido' )
# ej:  no/E se/E obser/P <3*> matchea con :
#      no   se   observan zonas con mucho liquido
#      no   se   observaron  modificaciones de liquido
#      no   se   observo     liquido
#    etc
#
#



no/E, se/E, obser/P | visua/P | ident/P | detec/P | determ/P , <5*>, REF

no/E, se/E, obser/P | detec/P |visua/P | ident/P , <5*>, ni/E, <2*>, REF

no/E, se/E, obser/P | visua/P | ident/P | detec/P , <3*>, compatible/P, <2*>, REF

no/E, poder/P, visual/P, <4*>, REF

no/E, logra/P, deter/P, <3*>, REF

no/E, se/E, logra/P, obser/P | visua/P | ident/P , REF

no/E, se/E, <2*>, descart/P, REF

no/E, <2*>, obser/P | prese/P | produ/P , REF

no/E, REF

sin/E, evide/P | obser/P | visua/P , <3*>, ni/E, REF

sin/E, evide/P, <2*>, REF

sin/E, <5*>, ni/E, REF

sin/E, REF







